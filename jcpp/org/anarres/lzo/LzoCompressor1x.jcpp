package org.anarres.lzo;

import java.util.Arrays;

public class LzoCompressor1x implements LzoConstants {

private static final int init = 0;
private static final int next = 1;
private static final int try_match = 2;
private static final int literal = 3;
private static final int m_len_done = 4;

#include "lzojava.h"

#if 1 //Java && defined(UA_GET32)
#undef  LZO_DICT_USE_PTR
#define LZO_DICT_USE_PTR 0
#endif

#define pd(a,b) PTR_DIFF(a,b)

#define LZO_NEED_DICT_H 1
#ifndef D_BITS
#define D_BITS          14
#endif
#define D_INDEX1(d,p)       d = DM(DMUL(0x21,DX3(p,5,5,6)) >> 5)
#define D_INDEX2(d,p)       d = (d & (D_MASK & 0x7ff)) ^ (D_HIGH | 0x1f)
#if 1
#define DINDEX(dv,p)        DM(((DMUL(0x1824429d,dv)) >> (32-D_BITS)))
#else
#define DINDEX(dv,p)        DM((dv) + ((dv) >> (32-D_BITS)))
#endif
#include "config1x.h"
#define LZO_DETERMINISTIC (1)

#undef  lzo_dict_t
#define lzo_dict_t int
#undef  lzo_dict_p
#define lzo_dict_p int[]

#ifndef DO_COMPRESS
#define DO_COMPRESS     lzo1x_1_compress
#endif

#define UA_INT(b) ((b) & 0xff)

public static int UA_GET32(byte[] in, int in_ptr) {
	return (UA_INT(in[in_ptr]) << 24) | (UA_INT(in[in_ptr + 1]) << 16) | (UA_INT(in[in_ptr + 2]) << 8) | UA_INT(in[in_ptr + 3]);
}

#define lzo_uintptr_t int

#include "lzo1x_c.ch"

}
